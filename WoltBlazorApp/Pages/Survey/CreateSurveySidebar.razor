@using Domain.Model
@using Domain.DTO
<!-- Side Menu -->
                <div class="sidebar">
                    <ul class="list-group">
                        @foreach (var category in Categories)
                        {
                            <li class="list-group-item">
                                <h5>@category.CategoryName</h5>
                                @foreach (var risk in Risks.Where(r => r.Category.CategoryId == category.CategoryId))
                                {
                                    <h6>@risk.Name</h6>
                                    @foreach (var question in Questions.Where(q => q.RelatedRisk.Id == risk.Id))
                                    {
                                        <div @onclick="() => SelectQuestion(question)" class="list-group-item list-group-item-action">
                                            - @question.Body
                                        </div>
                                    }
                                    <div class="list-group-item list-group-item-action" @onclick="() => OpenAddQuestion(risk)">
                                        + Add Question
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                </div>

@code {
    [Parameter]
    public List<RiskCategory> Categories { get; set; }
    [Parameter]
    public List<Risk> Risks { get; set; }
    [Parameter]
    public List<CreateQuestionDTO> Questions { get; set; }
    [Parameter]
    public EventCallback<CreateQuestionDTO> SelectQuestionNotify { get; set; }
    [Parameter]
    public EventCallback<Risk> AddQuestionNotify { get; set; }
    

    void SelectQuestion(CreateQuestionDTO currentQuestion)
    {
        SelectQuestionNotify.InvokeAsync(currentQuestion);
    }

    void OpenAddQuestion(Risk risk)
    {
        AddQuestionNotify.InvokeAsync(risk);
    }
}