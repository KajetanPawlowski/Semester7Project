@using Domain.Model
@using Domain.DTO

<div class="card">
    <div class="card-title">
        <h3>@question.Body</h3> 
    </div>
    <div class="card-body" style="@StyleDisplay">
        <div class="input-group mb-3">
            <input type="text" class="form-control"@bind="newAnswer" placeholder="Add new answer"/>
            <button class="btn btn-success" @onclick="AddAnswer"> Add </button>
        </div>
        <div>
            @foreach (var answer in question.AllAnswers)
            {
                <label>
                    <input type="radio" name="@question.Body" value="@answer" @onchange="ChoiceSelected" />
                    @answer
                </label>
            }
        </div>    
    </div>
</div>

@code {
    private string[] StyleDisplay = new string[] { "display : block", "display : none", "display : none" };
    
    private CreateQuestionDTO toCreate = new CreateQuestionDTO();
    private Question question = new Question();
    private string newAnswer = "";
    private Question newQuestion = null;
    [Parameter]
    public EventCallback<string> OnChoiceSelected { get; set; } 

    protected override void OnInitialized()
    {
        
        question.Body = "How are you?";
        question.AllAnswers = new List<string> {"Very Satisfied", "Satisfied", "Neutral", "Unsatisfied", "Very Unsatisfied" };
    }

    private void AddAnswerToFinalList(string answer)
    {
        toCreate.AllAnswers.Add(answer);
    }
    
    private void AddAnswer()
    {
        if (!string.IsNullOrEmpty(newAnswer))
        {
            question.AllAnswers.Add(newAnswer);
            AddAnswerToFinalList(newAnswer);
            newAnswer = "";
        }
    }
    
    private async Task ChoiceSelected(ChangeEventArgs e)
    {
        await OnChoiceSelected.InvokeAsync(e.Value.ToString());
    }

    

}